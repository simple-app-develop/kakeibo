name: "リリースタグとノートを作成する(マージの場合)"

on:
  pull_request:
    branches:
      - main
    types: [closed]

jobs:
  tag:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - name: "前回のリリースタグを取得"
        id: pre_tag
        run: |
          response=$(curl -H 'Accept: application/vnd.github.v3+json' -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' https://api.github.com/repos/${{ github.repository }}/releases/latest)
          error_message=$(echo "$response" | jq -r .message)
          
          if [ "$error_message" == "Not Found" ]; then
            tag="Ver.0.0.0"
          else
            tag=$(echo "$response" | jq -r .tag_name)
          fi
      
          tag_version=${tag#Ver.}
          echo "PREVIOUS_TAG_VERSION=$tag_version" >> $GITHUB_ENV
          echo "DEBUG: tag_version is $tag_version"

      - name: "プルリクエストのタイトルを取得"
        id: pr_title
        run: |
          pr_title=$(curl -H 'Accept: application/vnd.github.v3+json' -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' https://api.github.com/repos/${{ github.repository }}/pulls?state=closed | jq '.[0].title' | sed 's/"//g')
          if [[ -z "$pr_title" ]]; then
            pr_title=""
          fi
          echo "PR_TITLE=$pr_title" >> $GITHUB_ENV
          echo "DEBUG: pr_title is $pr_title"


      - name: "バージョンをインクリメントする"
        id: bump_version
        run: |
          IFS='.' read -ra version_parts <<< "${PREVIOUS_TAG_VERSION:-0.0.0}"
          major=${version_parts[0]:-0}
          minor=${version_parts[1]:-0}
          patch=${version_parts[2]:-0}

          if [[ "${PR_TITLE}" == *"[major]"* ]]; then
            major=$((major + 1))
            minor=0
            patch=0
            echo "DEBUG: major."
          elif [[ "${PR_TITLE}" == *"[minor]"* ]]; then
            minor=$((minor + 1))
            patch=0
            echo "DEBUG: minor."
          else
            patch=$((patch + 1))
            echo "DEBUG: patch."
          fi
        
          new_version="Ver.$major.$minor.$patch"
          echo "NEW_VERSION=$new_version" >> $GITHUB_ENV

      - name: "タグを作成する"
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag ${{ env.NEW_VERSION }}
          git push origin ${{ env.NEW_VERSION }}
          echo "DEBUG: new_version is ${{ env.NEW_VERSION }}"

      - name: "リリースノートの本文を生成する"
        id: release_note
        run: |
          release_note=$(curl -X POST -H 'Accept: application/vnd.github.v3+json' -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' https://api.github.com/repos/${{ github.repository }}/releases/generate-notes -d "{\"tag_name\":\"${NEW_VERSION}\", \"previous_tag_name\":\"Ver.${PREVIOUS_TAG_VERSION}\"}" | jq .body | sed 's/"//g')
          echo "RELEASE_NOTE=$release_note" >> $GITHUB_ENV
          echo "DEBUG: release_note is $release_note"

      - name: "リリースノートを作成する"
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d "{ \"tag_name\": \"${NEW_VERSION}\", \"name\": \"${NEW_VERSION}\", \"body\": \"${RELEASE_NOTE}\"}" \
            https://api.github.com/repos/${{ github.repository }}/releases
